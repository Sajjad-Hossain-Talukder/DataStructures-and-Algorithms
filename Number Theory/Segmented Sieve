
// Return prime in a range 
//========================


#include<bits/stdc++.h>
#define ll long long
#define pb push_back
using namespace std;

vector<ll>  sieve( ll n ){

    bool temp[n +1];

    vector<ll>prime;

    prime.pb(2);

    for(ll i = 3 ; i <= n ; i+=2){
        if( ! temp[i] ){
            prime.pb(i);
            if(i*i<=n){
                for(ll j = i*i ; j<=n ; j+=(i*2))
                    temp[j] = 1 ;
            }
        }
    }
 return prime;
 
}

vector<ll> segmented_sieve ( ll low , ll high ){

    ll lowlim , sz , d = high-low +1 , lm = sqrt(high)+1  ;

    bool mark [d+1];

    vector<ll> sv_prime , answer_prime;

    sv_prime = sieve(lm);

    sz = sv_prime.size();

    for(ll i = 0 ; i < sz ; i++){

        lowlim = low/sv_prime[i]*sv_prime[i];

        if(lowlim<low)
                lowlim+=sv_prime[i];
        if( lowlim == sv_prime[i])
                lowlim+=sv_prime[i];

        for(ll j = lowlim ; j <= high ; j+=sv_prime[i] )
                    mark[j-low] = 1 ;

    }
    for(ll i = 0 ; i<d ; i++)
        if(! mark[i] )
            answer_prime.pb(i+low);

return answer_prime;

}

int main(){
    ll low , high;

    cin>>low>>high;

    vector<ll>Prime_In_Range;

    Prime_In_Range = segmented_sieve ( low, high );

   for(auto a : Prime_In_Range )
        cout<<a<<" ";cout<<endl;

return 0;
}

