#include<bits/stdc++.h>
#define ll long long
#define pb push_back
using namespace std;

int main(){
    string s , p ;
    cin >> s >> p ;

    int szs = s.size() ;
    int szp = p.size() ;

    int dp [ szs+1 ] [szp+1 ] ;
    memset(dp , 0 , sizeof( dp ) ) ;

    for( int i = 1 ; i <= szs ; i++ ){
        for( int j = 1 ; j <= szp ; j++ ){

            if(s[i-1] == p[j-1] ) dp[i][j] = dp[i-1][j-1] + 1 ;
            else dp[i][j] = max( dp[i-1][j] , dp[i][j-1] ) ;

        }
    }

    deque < char > ans ;

    int i = szs , j = szp ;

    while( 1 ) {

        if( dp[i-1][j-1] == 0 && dp[i-1][j] == 0 && dp[i][j-1] == 0  ){
            ans.push_front(s[i-1]);
            //dp[i][j] = -1 ;
            break ;
        }
        if( dp[i-1][j-1] == dp[i-1][j] && dp[i][j-1] == dp[i-1][j]  ){
            if(dp[i][j-1] != dp[i][j] ){
                //dp[i][j] =  -1 ;
                ans.push_front( s[i-1] ) ;
                i-=1 ;
            j-=1 ;
                }
            else{
                    i-=1;
            }
        }
        
        if( dp[i-1][j-1] != dp[i-1][j] || dp[i][j-1] != dp[i-1][j] ){
            if( dp[i-1][j] > dp[i][j-1] ) i-=1;
            else j-=1;
        }

    }

    cout << "Longest Common Subsequence (IterativeDP) :\"";
    for(auto a : ans ) cout << a ; cout <<"\""<< endl;


    cout << "Longest Common Subsequence (IterativeDP) Length : " << dp[szs][szp] <<"\n";

return 0;
}
/*
sajjadhossaintalukder
aliahasantalukder
*/
