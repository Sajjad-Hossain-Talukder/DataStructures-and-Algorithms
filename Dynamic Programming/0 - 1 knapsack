Greedy Algorithm can help us to solve most of problems but in some case it Fails . 0 - 1 Knapsack is one of them , in which case 
it fails . Apparently it will assume that we can solve it using greedy approach , But there is some trivial case which can not be solved using greedy .
In this case , solving approach will be Dynamic programming . Let's have a look on following example down below : 

            There is sack and the maximum weight it can hold is 7 kg . There are multiple object of different wight and price given below .
            We need to full our sack in such a way that we can gain maximum profit . 

            price  : 1  4  5  7 
            weight : 1  3  4  7 
 
For this case , a diagram have drawn to show how we can move using DP approach .Check out the jpg file outside this file . Here a short description is 
given which may help . 

In DP process , there is only 2 state . If we take i -th  object , then for this object situation is 1 and if we donot take , then it is a 0 - state . 
That's why this is known as 0 - 1 knapsack . There is no chance of taking a fraction of a object. If we want to keep any of them , then we have to keep whole object.

we check all possibility by not taking a object and we check again by taking this object . If we preserve our previous result , then it will help us if we
find the same dp state again . Check out 0 - 1 knapsack Image which will help in details .

Code : 
-------
