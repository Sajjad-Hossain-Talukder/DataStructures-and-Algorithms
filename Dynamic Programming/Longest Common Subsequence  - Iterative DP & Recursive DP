Source : http://www.shafaetsplanet.com/?p=3602
Source : https://www.youtube.com/watch?v=LAKWWDX3sGw
----------------------------------------------------------

#include<bits/stdc++.h>
#define ll long long
#define pb push_back
using namespace std;

const int mx = 1e4+4;
string s , p ;
int szs , szp , cnt = 0 ;
int dp[mx][mx] ;

int longestCommonSubseq ( int i , int j ) {

    cnt += 1 ;

    if( i == szs || j == szp ) return 0 ;
    
    if( dp[i][j] != -1 ) return dp[i][j] ;

    if( s[i] == p[j] ) return dp[i][j] = 1 + longestCommonSubseq(i+1 , j+1 ) ;
    
    else return dp[i][j] = max ( longestCommonSubseq(i+1 , j ) , longestCommonSubseq(i , j+1 ) ) ;

}



int main(){

    cin >> s >> p ;

    szs = s.size() ;
    szp = p.size() ;

    memset( dp , -1 , sizeof(dp) ) ;

    int d = longestCommonSubseq (0,0) ;
    
    cout << "Longest Common Subsequence (RecursiveDP) Length : " << d << "\nComplexity : "<< cnt << endl;
    
    cnt = 0 ;
    int dpExtra [ szs+1 ] [szp+1 ] ;
    memset(dpExtra , 0 , sizeof( dpExtra ) ) ;

    for( int i = 1 ; i < szs+1 ; i++ ){
        for( int j = 1 ; j < szp+1 ; j++ ){
            cnt += 1 ;
            if(s[i-1] == p[j-1] ) dpExtra[i][j] = dpExtra[i-1][j-1] + 1 ;
            else dpExtra[i][j] = max( dpExtra[i-1][j] , dpExtra[i][j-1] ) ;
        }
    }

    for(int i = 0 ; i < szs+1 ; i++ ){
        for(int j = 0 ; j < szp+1 ; j++ ){
            cout << dpExtra[i][j] << " ";
        }
        cout << endl;
    }

    cout << "Longest Common Subsequence (IterativeDP) Length : " << dpExtra[szs][szp] << "\nComplexity : "<< cnt << endl;

return 0;
}
/*
sajjadhossaintalukder
aliahasantalukder
*/
